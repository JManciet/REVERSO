#name: GitHub Actions Demo
#on: [push]
#
#jobs:
#  Explore-GitHub-Actions:
#    runs-on: ubuntu-latest
#    steps:
#      - run: echo "üöÄ The job was automatically triggered by a ${{ github.event_name }} event."
#      - run: echo "üñ•Ô∏è This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#      - name: Check out repository code
#        uses: actions/checkout@v4
#      - run: echo "üõ†Ô∏è The ${{ github.repository }} repository has been cloned to the runner."
#      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
#      - name: List files in the repository
#        run:
#          ls ${{ github.workspace }}
#      - run: echo "‚úÖ tThis job's status is ${{ job.status }}."

#name: SonarCloud
#on:
#  push:
#    branches:
#      - master
#  pull_request:
#    types: [opened, synchronize, reopened]
#jobs:
#  build:
#    name: Build and analyze
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: 17
#          distribution: 'zulu' # Alternative distribution options are available.
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Maven packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=JManciet_REVERSO_WEB

#name: Build
#on:
#  push:
#    branches:
#      - master
#  pull_request:
#    types: [opened, synchronize, reopened]
#jobs:
#  sonarcloud:
#    name: SonarCloud
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - name: SonarCloud Scan
#        uses: SonarSource/sonarcloud-github-action@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  #Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

name: Java CI/CD - SonarCloud - Artifact - Docker
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:

  init-workflow:
    name: init workflow
    runs-on: ubuntu-latest  #os
    steps:
      # message informatif
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  project-build:
    name: Java Jar construct and artefact
    runs-on: ubuntu-latest
    needs: init-workflow

    steps:
      # checkout du projet
      - name: Checkout code
        uses: actions/checkout@v4

      # installation de la JDK
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17' # version
          architecture: x64

      # compilation du projet
      - name: Compile Java Sources
        run: |
          javac -d out src/*.java src/**/*.java --exclude-dir src/tests
          cd out
          ls -al

      # creation du Jar du projet
      - name: Create JAR
        run: |
          ls -al
          jar -cvfm "out/reverso.jar" "src/Manifest.txt" -C out . 
          jar -tf out/reverso.jar

      # Sauvegarde de l'artefact JAR
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: reverso.jar
          path: out/reverso.jar

      # message de fin indiquant que tout s'est bien pass√©
      - run: echo "üçè This job's status is ${{ job.status }}."

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # message de fin indiquant que tout s'est bien pass√©
      - run: echo "üçè This job's status is ${{ job.status }}."